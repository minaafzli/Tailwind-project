/*! tailwindcss v4.1.12 | MIT License | https://tailwindcss.com */
@layer properties;
.relative {
  position: relative;
}
.container {
  width: 100%;
}
.mx-auto {
  margin-inline: auto;
}
.flex {
  display: flex;
}
.hidden {
  display: none;
}
.inline-flex {
  display: inline-flex;
}
.h-screen {
  height: 100vh;
}
.w-2\/3 {
  width: calc(2/3 * 100%);
}
.w-full {
  width: 100%;
}
.flex-1 {
  flex: 1;
}
.rotate-180 {
  rotate: 180deg;
}
.transform {
  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
}
.cursor-pointer {
  cursor: pointer;
}
.flex-col {
  flex-direction: column;
}
.flex-row {
  flex-direction: row;
}
.items-center {
  align-items: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-end {
  justify-content: flex-end;
}
.divide-x-2 {
  :where(& > :not(:last-child)) {
    --tw-divide-x-reverse: 0;
    border-inline-style: var(--tw-border-style);
    border-inline-start-width: calc(2px * var(--tw-divide-x-reverse));
    border-inline-end-width: calc(2px * calc(1 - var(--tw-divide-x-reverse)));
  }
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-x-hidden {
  overflow-x: hidden;
}
.scroll-smooth {
  scroll-behavior: smooth;
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-b {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
}
.border-b-4 {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 4px;
}
.border-\[\#fafafa\] {
  border-color: #fafafa;
}
.bg-\[\#080808\] {
  background-color: #080808;
}
.bg-\[\#111111\] {
  background-color: #111111;
}
.bg-\[\#232323\] {
  background-color: #232323;
}
.bg-\[\#363535\] {
  background-color: #363535;
}
.bg-\[\#fafafa\] {
  background-color: #fafafa;
}
.pt-\[\.9rem\] {
  padding-top: .9rem;
}
.text-center {
  text-align: center;
}
.text-right {
  text-align: right;
}
.tracking-\[\.15rem\] {
  --tw-tracking: .15rem;
  letter-spacing: .15rem;
}
.text-\[\#fafafa\] {
  color: #fafafa;
}
.uppercase {
  text-transform: uppercase;
}
.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-all {
  transition-property: all;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-transform {
  transition-property: transform, translate, scale, rotate;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.duration-500 {
  --tw-duration: 500ms;
  transition-duration: 500ms;
}
.outline-none {
  --tw-outline-style: none;
  outline-style: none;
}
.group-open\:rotate-180 {
  &:is(:where(.group):is([open], :popover-open, :open) *) {
    rotate: 180deg;
  }
}
.group-focus\:max-h-screen {
  &:is(:where(.group):focus *) {
    max-height: 100vh;
  }
}
.group-focus\:-rotate-180 {
  &:is(:where(.group):focus *) {
    rotate: calc(180deg * -1);
  }
}
.hover\:border-2 {
  &:hover {
    @media (hover: hover) {
      border-style: var(--tw-border-style);
      border-width: 2px;
    }
  }
}
.hover\:bg-\[\#fafafa\] {
  &:hover {
    @media (hover: hover) {
      background-color: #fafafa;
    }
  }
}
.focus\:outline-none {
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.\[\&\[open\]\>summary\>\&\]\:rotate-180 {
  &[open]>summary>& {
    rotate: 180deg;
  }
}
.\[details\[open\]\>summary\&\]\:rotate-180 {
  details[open]>summary& {
    rotate: 180deg;
  }
}
@font-face {
  font-family: "Vazirmatn";
  src: url("../fonts/Vazirmatn-Regular.woff2");
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-divide-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-divide-x-reverse: 0;
      --tw-border-style: solid;
      --tw-tracking: initial;
      --tw-duration: initial;
    }
  }
}
